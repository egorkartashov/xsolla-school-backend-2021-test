version: "3.8"

services:
  products-api:
    build:
      context: .
    container_name: products-api
    restart: always
    ports:
    - 8000:8000
    links:
      - products-db
    volumes:
      - ./applogs:/app/applogs
    environment:
      - PORT=${PORT:-8000}
      - POSTGRES_HOST=${POSTGRES_HOST:-products-db}
      - POSTGRES_DB=${POSTGRES_DB:-products}
      - POSTGRES_USERNAME=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
  products-db:
    image: postgres:13.3-alpine
    restart: always
    container_name: products-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=products
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./data/db:/app/postgres/data
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    ports:
      - 80:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=1q2w3e
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: products-api-elasticsearch
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health" ]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 9200:9200
  logstash:
    image: docker.elastic.co/logstash/logstash:6.5.1
    container_name: products-api-logstash
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.14.0
    entrypoint: "filebeat -e -strict.perms=false"
    container_name: products-api-filebeat
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./applogs/:/logs/
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: products-api-kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5601/api/status" ]
      interval: 3s
      timeout: 3s
      retries: 50
    ports:
      - 5601:5601
